import discord
import asyncio
import logging
from datetime import datetime, timedelta
from config import DISCORD_TOKEN, CHANNEL_ID, ACTIVITY_TYPE

logging.basicConfig(
    level=logging.INFO,
    format='%(asctime)s [%(levelname)s] %(message)s',
    datefmt='%Y-%m-%d %H:%M:%S'
)
logger = logging.getLogger(__name__)

client = discord.Client()
start_time = None

async def clear_activity():
    """–û—á–∏—â–∞–µ—Ç –∞–∫—Ç–∏–≤–Ω–æ—Å—Ç—å (—Å—Ç–∞—Ç—É—Å)"""
    try:
        await client.change_presence(activity=None)
        logger.info(f'‚úÖ –ê–∫—Ç–∏–≤–Ω–æ—Å—Ç—å –æ—á–∏—â–µ–Ω–∞')
    except Exception as e:
        logger.error(f'‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –æ—á–∏—Å—Ç–∫–µ –∞–∫—Ç–∏–≤–Ω–æ—Å—Ç–∏: {e}')

def format_time(minutes):
    """–§–æ—Ä–º–∞—Ç–∏—Ä—É–µ—Ç –≤—Ä–µ–º—è –≤ —á–∏—Ç–∞–µ–º—ã–π —Ñ–æ—Ä–º–∞—Ç"""
    if minutes < 60:
        if minutes == 0:
            return "0 –º–∏–Ω—É—Ç"
        return f"{minutes} –º–∏–Ω—É—Ç{'—É' if minutes == 1 else '—ã' if 2 <= minutes <= 4 else ''}"
    
    hours = minutes // 60
    remaining_minutes = minutes % 60
    
    if hours < 24:
        hour_str = f"{hours} —á–∞—Å{'–∞' if 2 <= hours <= 4 else '–æ–≤' if hours > 4 else ''}"
        if remaining_minutes > 0:
            min_str = f"{remaining_minutes} –º–∏–Ω—É—Ç{'—É' if remaining_minutes == 1 else '—ã' if 2 <= remaining_minutes <= 4 else ''}"
            return f"{hour_str} {min_str}"
        return hour_str
    
    days = hours // 24
    remaining_hours = hours % 24
    day_str = f"{days} –¥–µ–Ω—å{'–¥–Ω—è' if 2 <= days <= 4 else '–¥–Ω–µ–π' if days > 4 else ''}"
    if remaining_hours > 0:
        hour_str = f"{remaining_hours} —á–∞—Å{'–∞' if 2 <= remaining_hours <= 4 else '–æ–≤' if remaining_hours > 4 else ''}"
        return f"{day_str} {hour_str}"
    return day_str

@client.event
async def on_connect():
    logger.info('üîå –ü–æ–¥–∫–ª—é—á–µ–Ω–æ –∫ Discord WebSocket')

@client.event
async def on_disconnect():
    logger.warning('‚ùå –û—Ç–∫–ª—é—á–µ–Ω–æ –æ—Ç Discord WebSocket')
    await clear_activity()

def get_activity_type():
    """–í–æ–∑–≤—Ä–∞—â–∞–µ—Ç —Ç–∏–ø –∞–∫—Ç–∏–≤–Ω–æ—Å—Ç–∏ Discord –ø–æ —Å—Ç—Ä–æ–∫–æ–≤–æ–º—É –∑–Ω–∞—á–µ–Ω–∏—é"""
    activity_map = {
        'playing': discord.ActivityType.playing,
        'watching': discord.ActivityType.watching,
        'listening': discord.ActivityType.listening,
        'streaming': discord.ActivityType.streaming,
        'competing': discord.ActivityType.competing
    }
    return activity_map.get(ACTIVITY_TYPE, discord.ActivityType.playing)

def get_activity_prefix():
    """–í–æ–∑–≤—Ä–∞—â–∞–µ—Ç —Ä—É—Å—Å–∫–∏–π –ø—Ä–µ—Ñ–∏–∫—Å –¥–ª—è —Ç–∏–ø–∞ –∞–∫—Ç–∏–≤–Ω–æ—Å—Ç–∏"""
    prefix_map = {
        'playing': '–ò–≥—Ä–∞–µ—Ç –≤',
        'watching': '–°–º–æ—Ç—Ä–∏—Ç',
        'listening': '–°–ª—É—à–∞–µ—Ç',
        'streaming': '–°—Ç—Ä–∏–º–∏—Ç',
        'competing': '–°–æ—Ä–µ–≤–Ω—É–µ—Ç—Å—è –≤'
    }
    return prefix_map.get(ACTIVITY_TYPE, '–ò–≥—Ä–∞–µ—Ç –≤')

async def update_activity():
    """–û–±–Ω–æ–≤–ª—è–µ—Ç –∞–∫—Ç–∏–≤–Ω–æ—Å—Ç—å –∫–∞–∂–¥—É—é –º–∏–Ω—É—Ç—É —Å —Ç–∞–π–º–µ—Ä–æ–º"""
    global start_time
    await client.wait_until_ready()
    
    start_time = datetime.now()
    logger.info(f'‚è∞ –¢–∞–π–º–µ—Ä –∞–∫—Ç–∏–≤–Ω–æ—Å—Ç–∏ –∑–∞–ø—É—â–µ–Ω (—Ç–∏–ø: {ACTIVITY_TYPE})')
    
    while not client.is_closed():
        try:
            elapsed = datetime.now() - start_time
            minutes = int(elapsed.total_seconds() / 60)
            
            time_str = format_time(minutes)
            activity_text = f"–∞—Ñ–∫—à—É —É–∂–µ {time_str}"
            
            # –î–ª—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å—Å–∫–∏—Ö –∞–∫–∫–∞—É–Ω—Ç–æ–≤ –∏—Å–ø–æ–ª—å–∑—É–µ–º —Ä–∞–∑–Ω—ã–µ —Ç–∏–ø—ã –∞–∫—Ç–∏–≤–Ω–æ—Å—Ç–µ–π
            if ACTIVITY_TYPE == 'playing':
                # –ò—Å–ø–æ–ª—å–∑—É–µ–º Game –¥–ª—è "–ò–≥—Ä–∞–µ—Ç –≤..."
                activity = discord.Game(name=activity_text)
                logger.info(f'‚úèÔ∏è –ê–∫—Ç–∏–≤–Ω–æ—Å—Ç—å –æ–±–Ω–æ–≤–ª–µ–Ω–∞: –ò–≥—Ä–∞–µ—Ç –≤ "{activity_text}"')
            elif ACTIVITY_TYPE == 'streaming':
                # –î–ª—è —Å—Ç—Ä–∏–º–∏–Ω–≥–∞ –Ω—É–∂–µ–Ω URL
                activity = discord.Streaming(name=activity_text, url="https://twitch.tv/afk")
                logger.info(f'‚úèÔ∏è –ê–∫—Ç–∏–≤–Ω–æ—Å—Ç—å –æ–±–Ω–æ–≤–ª–µ–Ω–∞: –°—Ç—Ä–∏–º–∏—Ç "{activity_text}"')
            else:
                # –î–ª—è –æ—Å—Ç–∞–ª—å–Ω—ã—Ö —Ç–∏–ø–æ–≤ –∏—Å–ø–æ–ª—å–∑—É–µ–º Activity
                activity_type = get_activity_type()
                activity_prefix = get_activity_prefix()
                activity = discord.Activity(type=activity_type, name=activity_text)
                logger.info(f'‚úèÔ∏è –ê–∫—Ç–∏–≤–Ω–æ—Å—Ç—å –æ–±–Ω–æ–≤–ª–µ–Ω–∞: {activity_prefix} "{activity_text}"')
            
            await client.change_presence(activity=activity)

            
            await asyncio.sleep(60)
            
        except discord.HTTPException as e:
            if e.status == 429:
                logger.warning(f'‚ö†Ô∏è Rate limit: —Å–ª–∏—à–∫–æ–º —á–∞—Å—Ç—ã–µ –∏–∑–º–µ–Ω–µ–Ω–∏—è –∞–∫—Ç–∏–≤–Ω–æ—Å—Ç–∏')
                await asyncio.sleep(300)
            else:
                logger.error(f'‚ùå –û—à–∏–±–∫–∞ HTTP –ø—Ä–∏ –∏–∑–º–µ–Ω–µ–Ω–∏–∏ –∞–∫—Ç–∏–≤–Ω–æ—Å—Ç–∏: {e}')
                await asyncio.sleep(60)
        except Exception as e:
            logger.error(f'‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –æ–±–Ω–æ–≤–ª–µ–Ω–∏–∏ –∞–∫—Ç–∏–≤–Ω–æ—Å—Ç–∏: {e}')
            await asyncio.sleep(60)

@client.event
async def on_ready():
    global start_time
    
    logger.info('=' * 50)
    logger.info(f'‚úÖ –ë–æ—Ç –≥–æ—Ç–æ–≤ –∫ —Ä–∞–±–æ—Ç–µ!')
    logger.info(f'üë§ –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å: {client.user}')
    logger.info(f'üÜî ID: {client.user.id}')
    
    if CHANNEL_ID:
        try:
            channel = client.get_channel(CHANNEL_ID)
            if channel:
                logger.info(f'üì∫ –ù–∞–π–¥–µ–Ω –∫–∞–Ω–∞–ª: {channel.name} ({CHANNEL_ID})')
                logger.info(f'üìù –¢–∏–ø –∫–∞–Ω–∞–ª–∞: {type(channel).__name__}')
                
                if isinstance(channel, discord.VoiceChannel):
                    logger.info('üé§ –≠—Ç–æ –≥–æ–ª–æ—Å–æ–≤–æ–π –∫–∞–Ω–∞–ª - –ø–æ–¥–∫–ª—é—á–∞—é—Å—å...')
                    try:
                        voice_client = await channel.connect()
                        logger.info(f'‚úÖ –£—Å–ø–µ—à–Ω–æ –ø–æ–¥–∫–ª—é—á–∏–ª—Å—è –∫ –≥–æ–ª–æ—Å–æ–≤–æ–º—É –∫–∞–Ω–∞–ª—É: {channel.name}')
                        logger.info('üîä –°—Ç–∞—Ç—É—Å: –í –ì–û–õ–û–°–û–í–û–ú –ö–ê–ù–ê–õ–ï')
                        
                        client.loop.create_task(update_activity())
                        logger.info('‚è∞ –ó–∞–ø—É—â–µ–Ω —Ç–∞–π–º–µ—Ä –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è –∞–∫—Ç–∏–≤–Ω–æ—Å—Ç–∏')
                    except discord.ClientException as e:
                        logger.error(f'‚ùå –û—à–∏–±–∫–∞ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è –∫ –≥–æ–ª–æ—Å–æ–≤–æ–º—É –∫–∞–Ω–∞–ª—É: {e}')
                    except Exception as e:
                        logger.error(f'‚ùå –ù–µ–æ–∂–∏–¥–∞–Ω–Ω–∞—è –æ—à–∏–±–∫–∞ –ø—Ä–∏ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏–∏: {e}')
                elif isinstance(channel, discord.TextChannel):
                    logger.info('üí¨ –≠—Ç–æ —Ç–µ–∫—Å—Ç–æ–≤—ã–π –∫–∞–Ω–∞–ª - –±–æ—Ç –±—É–¥–µ—Ç –æ–Ω–ª–∞–π–Ω')
                    client.loop.create_task(update_activity())
                    logger.info('‚è∞ –ó–∞–ø—É—â–µ–Ω —Ç–∞–π–º–µ—Ä –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è –∞–∫—Ç–∏–≤–Ω–æ—Å—Ç–∏')
                else:
                    logger.info(f'üìå –¢–∏–ø –∫–∞–Ω–∞–ª–∞: {type(channel).__name__}')
            else:
                logger.warning(f'‚ö†Ô∏è –ö–∞–Ω–∞–ª —Å ID {CHANNEL_ID} –Ω–µ –Ω–∞–π–¥–µ–Ω')
        except Exception as e:
            logger.error(f'‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –ø–æ–ª—É—á–µ–Ω–∏–∏ –∫–∞–Ω–∞–ª–∞: {e}')
    else:
        logger.info('üì∫ CHANNEL_ID –Ω–µ —É–∫–∞–∑–∞–Ω - –±–æ—Ç –ø—Ä–æ—Å—Ç–æ –±—É–¥–µ—Ç –æ–Ω–ª–∞–π–Ω')
        client.loop.create_task(update_activity())
        logger.info('‚è∞ –ó–∞–ø—É—â–µ–Ω —Ç–∞–π–º–µ—Ä –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è –∞–∫—Ç–∏–≤–Ω–æ—Å—Ç–∏')
    
    logger.info(f'üïê –í—Ä–µ–º—è –∑–∞–ø—É—Å–∫–∞: {datetime.now().strftime("%Y-%m-%d %H:%M:%S")}')
    logger.info('üü¢ –°—Ç–∞—Ç—É—Å: –û–ù–õ–ê–ô–ù')
    logger.info('=' * 50)

@client.event
async def on_resumed():
    logger.info('üîÑ –°–µ—Å—Å–∏—è –≤–æ—Å—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∞')

@client.event
async def on_error(event, *args, **kwargs):
    logger.error(f'‚ùå –û—à–∏–±–∫–∞ –≤ —Å–æ–±—ã—Ç–∏–∏ {event}', exc_info=True)

async def main():
    logger.info('üöÄ –ó–∞–ø—É—Å–∫ Discord Userbot...')
    logger.info('‚ö†Ô∏è –ü–†–ï–î–£–ü–†–ï–ñ–î–ï–ù–ò–ï: –ò—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ userbot –Ω–∞—Ä—É—à–∞–µ—Ç ToS Discord!')
    
    try:
        await client.start(DISCORD_TOKEN)
    except discord.LoginFailure:
        logger.error('‚ùå –û—à–∏–±–∫–∞ –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏–∏! –ü—Ä–æ–≤–µ—Ä—å—Ç–µ DISCORD_TOKEN –≤ .env —Ñ–∞–π–ª–µ')
    except discord.HTTPException as e:
        logger.error(f'‚ùå HTTP –æ—à–∏–±–∫–∞: {e}')
    except Exception as e:
        logger.error(f'‚ùå –ù–µ–æ–∂–∏–¥–∞–Ω–Ω–∞—è –æ—à–∏–±–∫–∞: {e}', exc_info=True)
    finally:
        logger.info('üîÑ –û—á–∏—â–∞—é –∞–∫—Ç–∏–≤–Ω–æ—Å—Ç—å...')
        await clear_activity()
        if not client.is_closed():
            await client.close()

if __name__ == '__main__':
    try:
        asyncio.run(main())
    except KeyboardInterrupt:
        logger.info('‚õî –ü–æ–ª—É—á–µ–Ω —Å–∏–≥–Ω–∞–ª –∑–∞–≤–µ—Ä—à–µ–Ω–∏—è (Ctrl+C)')
        logger.info('üëã –í—ã–∫–ª—é—á–µ–Ω–∏–µ –±–æ—Ç–∞...')
    finally:
        logger.info('‚úÖ –ë–æ—Ç –æ—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω')
